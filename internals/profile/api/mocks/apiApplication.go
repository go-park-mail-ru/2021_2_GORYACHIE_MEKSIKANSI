// Code generated by MockGen. DO NOT EDIT.
// Source: 2021_2_GORYACHIE_MEKSIKANSI/internals/profile/application (interfaces: ProfileApplicationInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	profile "2021_2_GORYACHIE_MEKSIKANSI/internals/profile"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProfileApplicationInterface is a mock of ProfileApplicationInterface interface.
type MockProfileApplicationInterface struct {
	ctrl     *gomock.Controller
	recorder *MockProfileApplicationInterfaceMockRecorder
}

// MockProfileApplicationInterfaceMockRecorder is the mock recorder for MockProfileApplicationInterface.
type MockProfileApplicationInterfaceMockRecorder struct {
	mock *MockProfileApplicationInterface
}

// NewMockProfileApplicationInterface creates a new mock instance.
func NewMockProfileApplicationInterface(ctrl *gomock.Controller) *MockProfileApplicationInterface {
	mock := &MockProfileApplicationInterface{ctrl: ctrl}
	mock.recorder = &MockProfileApplicationInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileApplicationInterface) EXPECT() *MockProfileApplicationInterfaceMockRecorder {
	return m.recorder
}

// AddAddress mocks base method.
func (m *MockProfileApplicationInterface) AddAddress(arg0 int, arg1 profile.AddressCoordinates) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddAddress", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddAddress indicates an expected call of AddAddress.
func (mr *MockProfileApplicationInterfaceMockRecorder) AddAddress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddAddress", reflect.TypeOf((*MockProfileApplicationInterface)(nil).AddAddress), arg0, arg1)
}

// DeleteAddress mocks base method.
func (m *MockProfileApplicationInterface) DeleteAddress(arg0, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAddress", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAddress indicates an expected call of DeleteAddress.
func (mr *MockProfileApplicationInterfaceMockRecorder) DeleteAddress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAddress", reflect.TypeOf((*MockProfileApplicationInterface)(nil).DeleteAddress), arg0, arg1)
}

// GetProfile mocks base method.
func (m *MockProfileApplicationInterface) GetProfile(arg0 int) (*profile.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", arg0)
	ret0, _ := ret[0].(*profile.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockProfileApplicationInterfaceMockRecorder) GetProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockProfileApplicationInterface)(nil).GetProfile), arg0)
}

// UpdateAddress mocks base method.
func (m *MockProfileApplicationInterface) UpdateAddress(arg0 int, arg1 profile.AddressCoordinates) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAddress", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAddress indicates an expected call of UpdateAddress.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdateAddress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAddress", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdateAddress), arg0, arg1)
}

// UpdateAvatar mocks base method.
func (m *MockProfileApplicationInterface) UpdateAvatar(arg0 int, arg1 *profile.UpdateAvatar) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAvatar", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAvatar indicates an expected call of UpdateAvatar.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdateAvatar(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAvatar", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdateAvatar), arg0, arg1)
}

// UpdateBirthday mocks base method.
func (m *MockProfileApplicationInterface) UpdateBirthday(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBirthday", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateBirthday indicates an expected call of UpdateBirthday.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdateBirthday(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBirthday", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdateBirthday), arg0, arg1)
}

// UpdateEmail mocks base method.
func (m *MockProfileApplicationInterface) UpdateEmail(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEmail", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateEmail indicates an expected call of UpdateEmail.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdateEmail(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEmail", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdateEmail), arg0, arg1)
}

// UpdateName mocks base method.
func (m *MockProfileApplicationInterface) UpdateName(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateName", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateName indicates an expected call of UpdateName.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdateName(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateName", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdateName), arg0, arg1)
}

// UpdatePassword mocks base method.
func (m *MockProfileApplicationInterface) UpdatePassword(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePassword", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePassword indicates an expected call of UpdatePassword.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdatePassword(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePassword", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdatePassword), arg0, arg1)
}

// UpdatePhone mocks base method.
func (m *MockProfileApplicationInterface) UpdatePhone(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePhone", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePhone indicates an expected call of UpdatePhone.
func (mr *MockProfileApplicationInterfaceMockRecorder) UpdatePhone(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePhone", reflect.TypeOf((*MockProfileApplicationInterface)(nil).UpdatePhone), arg0, arg1)
}
