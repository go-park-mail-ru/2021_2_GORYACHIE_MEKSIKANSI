// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package profile

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile(in *jlexer.Lexer, out *UpdatePhone) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Phone":
			out.Phone = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile(out *jwriter.Writer, in UpdatePhone) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Phone\":"
		out.RawString(prefix[1:])
		out.String(string(in.Phone))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdatePhone) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdatePhone) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile(l, v)
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile1(in *jlexer.Lexer, out *UpdatePassword) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile1(out *jwriter.Writer, in UpdatePassword) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix[1:])
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdatePassword) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile1(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdatePassword) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile1(l, v)
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile2(in *jlexer.Lexer, out *UpdateName) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile2(out *jwriter.Writer, in UpdateName) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdateName) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile2(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdateName) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile2(l, v)
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile3(in *jlexer.Lexer, out *UpdateEmail) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile3(out *jwriter.Writer, in UpdateEmail) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdateEmail) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile3(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdateEmail) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile3(l, v)
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile4(in *jlexer.Lexer, out *UpdateBirthday) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "birthday":
			out.Birthday = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile4(out *jwriter.Writer, in UpdateBirthday) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"birthday\":"
		out.RawString(prefix[1:])
		out.String(string(in.Birthday))
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdateBirthday) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile4(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdateBirthday) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile4(l, v)
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile5(in *jlexer.Lexer, out *UpdateAddress) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "address":
			easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile6(in, &out.Address)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile5(out *jwriter.Writer, in UpdateAddress) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"address\":"
		out.RawString(prefix[1:])
		easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile6(out, in.Address)
	}
	out.RawByte('}')
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdateAddress) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile5(w, v)
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdateAddress) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile5(l, v)
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile6(in *jlexer.Lexer, out *AddressCoordinates) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "coordinates":
			easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile7(in, &out.Coordinates)
		case "alias":
			out.Alias = string(in.String())
		case "city":
			out.City = string(in.String())
		case "street":
			out.Street = string(in.String())
		case "house":
			out.House = string(in.String())
		case "flat":
			out.Flat = string(in.String())
		case "porch":
			out.Porch = int(in.Int())
		case "floor":
			out.Floor = int(in.Int())
		case "intercom":
			out.Intercom = string(in.String())
		case "comment":
			out.Comment = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile6(out *jwriter.Writer, in AddressCoordinates) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"coordinates\":"
		out.RawString(prefix[1:])
		easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile7(out, in.Coordinates)
	}
	if in.Alias != "" {
		const prefix string = ",\"alias\":"
		out.RawString(prefix)
		out.String(string(in.Alias))
	}
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix)
		out.String(string(in.City))
	}
	if in.Street != "" {
		const prefix string = ",\"street\":"
		out.RawString(prefix)
		out.String(string(in.Street))
	}
	if in.House != "" {
		const prefix string = ",\"house\":"
		out.RawString(prefix)
		out.String(string(in.House))
	}
	if in.Flat != "" {
		const prefix string = ",\"flat\":"
		out.RawString(prefix)
		out.String(string(in.Flat))
	}
	if in.Porch != 0 {
		const prefix string = ",\"porch\":"
		out.RawString(prefix)
		out.Int(int(in.Porch))
	}
	if in.Floor != 0 {
		const prefix string = ",\"floor\":"
		out.RawString(prefix)
		out.Int(int(in.Floor))
	}
	if in.Intercom != "" {
		const prefix string = ",\"intercom\":"
		out.RawString(prefix)
		out.String(string(in.Intercom))
	}
	if in.Comment != "" {
		const prefix string = ",\"comment\":"
		out.RawString(prefix)
		out.String(string(in.Comment))
	}
	out.RawByte('}')
}
func easyjson521a5691Decode20212GORYACHIEMEKSIKANSIInternalsProfile7(in *jlexer.Lexer, out *Coordinates) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "latitude":
			out.Latitude = float32(in.Float32())
		case "longitude":
			out.Longitude = float32(in.Float32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson521a5691Encode20212GORYACHIEMEKSIKANSIInternalsProfile7(out *jwriter.Writer, in Coordinates) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"latitude\":"
		out.RawString(prefix[1:])
		out.Float32(float32(in.Latitude))
	}
	{
		const prefix string = ",\"longitude\":"
		out.RawString(prefix)
		out.Float32(float32(in.Longitude))
	}
	out.RawByte('}')
}
