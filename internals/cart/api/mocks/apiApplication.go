// Code generated by MockGen. DO NOT EDIT.
// Source: 2021_2_GORYACHIE_MEKSIKANSI/internals/cart/application (interfaces: CartApplicationInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	cart "2021_2_GORYACHIE_MEKSIKANSI/internals/cart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCartApplicationInterface is a mock of CartApplicationInterface interface.
type MockCartApplicationInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCartApplicationInterfaceMockRecorder
}

// MockCartApplicationInterfaceMockRecorder is the mock recorder for MockCartApplicationInterface.
type MockCartApplicationInterfaceMockRecorder struct {
	mock *MockCartApplicationInterface
}

// NewMockCartApplicationInterface creates a new mock instance.
func NewMockCartApplicationInterface(ctrl *gomock.Controller) *MockCartApplicationInterface {
	mock := &MockCartApplicationInterface{ctrl: ctrl}
	mock.recorder = &MockCartApplicationInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCartApplicationInterface) EXPECT() *MockCartApplicationInterfaceMockRecorder {
	return m.recorder
}

// GetCart mocks base method.
func (m *MockCartApplicationInterface) GetCart(arg0 int) (*cart.ResponseCartErrors, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCart", arg0)
	ret0, _ := ret[0].(*cart.ResponseCartErrors)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCart indicates an expected call of GetCart.
func (mr *MockCartApplicationInterfaceMockRecorder) GetCart(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCart", reflect.TypeOf((*MockCartApplicationInterface)(nil).GetCart), arg0)
}

// UpdateCart mocks base method.
func (m *MockCartApplicationInterface) UpdateCart(arg0 cart.RequestCartDefault, arg1 int) (*cart.ResponseCartErrors, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCart", arg0, arg1)
	ret0, _ := ret[0].(*cart.ResponseCartErrors)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCart indicates an expected call of UpdateCart.
func (mr *MockCartApplicationInterfaceMockRecorder) UpdateCart(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCart", reflect.TypeOf((*MockCartApplicationInterface)(nil).UpdateCart), arg0, arg1)
}
