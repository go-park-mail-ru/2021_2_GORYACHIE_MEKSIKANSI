// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: restaurant.proto

package resProto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Restaurants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurants []*Restaurant `protobuf:"bytes,1,rep,name=restaurants,proto3" json:"restaurants,omitempty"`
	Error       string        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Restaurants) Reset() {
	*x = Restaurants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restaurants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restaurants) ProtoMessage() {}

func (x *Restaurants) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restaurants.ProtoReflect.Descriptor instead.
func (*Restaurants) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{0}
}

func (x *Restaurants) GetRestaurants() []*Restaurant {
	if x != nil {
		return x.Restaurants
	}
	return nil
}

func (x *Restaurants) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RecommendedRestaurants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurants []*Restaurant `protobuf:"bytes,1,rep,name=restaurants,proto3" json:"restaurants,omitempty"`
	Tags        []*Tags       `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Error       string        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RecommendedRestaurants) Reset() {
	*x = RecommendedRestaurants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendedRestaurants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendedRestaurants) ProtoMessage() {}

func (x *RecommendedRestaurants) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendedRestaurants.ProtoReflect.Descriptor instead.
func (*RecommendedRestaurants) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{1}
}

func (x *RecommendedRestaurants) GetRestaurants() []*Restaurant {
	if x != nil {
		return x.Restaurants
	}
	return nil
}

func (x *RecommendedRestaurants) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RecommendedRestaurants) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RestaurantsTagsPromo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurants []*Restaurant `protobuf:"bytes,1,rep,name=restaurants,proto3" json:"restaurants,omitempty"`
	Tags        []*Tags       `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Promocode   []*Promocode  `protobuf:"bytes,3,rep,name=promocode,proto3" json:"promocode,omitempty"`
	Error       string        `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RestaurantsTagsPromo) Reset() {
	*x = RestaurantsTagsPromo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantsTagsPromo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantsTagsPromo) ProtoMessage() {}

func (x *RestaurantsTagsPromo) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantsTagsPromo.ProtoReflect.Descriptor instead.
func (*RestaurantsTagsPromo) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{2}
}

func (x *RestaurantsTagsPromo) GetRestaurants() []*Restaurant {
	if x != nil {
		return x.Restaurants
	}
	return nil
}

func (x *RestaurantsTagsPromo) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RestaurantsTagsPromo) GetPromocode() []*Promocode {
	if x != nil {
		return x.Promocode
	}
	return nil
}

func (x *RestaurantsTagsPromo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Promocode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Img    string `protobuf:"bytes,3,opt,name=img,proto3" json:"img,omitempty"`
	Code   string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	RestId int64  `protobuf:"varint,5,opt,name=rest_id,json=restId,proto3" json:"rest_id,omitempty"`
}

func (x *Promocode) Reset() {
	*x = Promocode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Promocode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promocode) ProtoMessage() {}

func (x *Promocode) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promocode.ProtoReflect.Descriptor instead.
func (*Promocode) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{3}
}

func (x *Promocode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Promocode) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Promocode) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Promocode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Promocode) GetRestId() int64 {
	if x != nil {
		return x.RestId
	}
	return 0
}

type Restaurant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Img                 string  `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Name                string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CostForFreeDelivery int64   `protobuf:"varint,4,opt,name=cost_for_free_delivery,json=costForFreeDelivery,proto3" json:"cost_for_free_delivery,omitempty"`
	MinDelivery         int64   `protobuf:"varint,5,opt,name=min_delivery,json=minDelivery,proto3" json:"min_delivery,omitempty"`
	MaxDelivery         int64   `protobuf:"varint,6,opt,name=max_delivery,json=maxDelivery,proto3" json:"max_delivery,omitempty"`
	Rating              float32 `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *Restaurant) Reset() {
	*x = Restaurant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restaurant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restaurant) ProtoMessage() {}

func (x *Restaurant) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restaurant.ProtoReflect.Descriptor instead.
func (*Restaurant) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{4}
}

func (x *Restaurant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Restaurant) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Restaurant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Restaurant) GetCostForFreeDelivery() int64 {
	if x != nil {
		return x.CostForFreeDelivery
	}
	return 0
}

func (x *Restaurant) GetMinDelivery() int64 {
	if x != nil {
		return x.MinDelivery
	}
	return 0
}

func (x *Restaurant) GetMaxDelivery() int64 {
	if x != nil {
		return x.MaxDelivery
	}
	return 0
}

func (x *Restaurant) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type RestaurantId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IdClient int64 `protobuf:"varint,2,opt,name=idClient,proto3" json:"idClient,omitempty"`
}

func (x *RestaurantId) Reset() {
	*x = RestaurantId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantId) ProtoMessage() {}

func (x *RestaurantId) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantId.ProtoReflect.Descriptor instead.
func (*RestaurantId) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{5}
}

func (x *RestaurantId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RestaurantId) GetIdClient() int64 {
	if x != nil {
		return x.IdClient
	}
	return 0
}

type RestaurantClientId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdRestaurant int64 `protobuf:"varint,1,opt,name=idRestaurant,proto3" json:"idRestaurant,omitempty"`
	IdClient     int64 `protobuf:"varint,2,opt,name=idClient,proto3" json:"idClient,omitempty"`
}

func (x *RestaurantClientId) Reset() {
	*x = RestaurantClientId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantClientId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantClientId) ProtoMessage() {}

func (x *RestaurantClientId) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantClientId.ProtoReflect.Descriptor instead.
func (*RestaurantClientId) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{6}
}

func (x *RestaurantClientId) GetIdRestaurant() int64 {
	if x != nil {
		return x.IdRestaurant
	}
	return 0
}

func (x *RestaurantClientId) GetIdClient() int64 {
	if x != nil {
		return x.IdClient
	}
	return 0
}

type RestaurantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Img                 string  `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Name                string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CostForFreeDelivery int64   `protobuf:"varint,4,opt,name=cost_for_free_delivery,json=costForFreeDelivery,proto3" json:"cost_for_free_delivery,omitempty"`
	MinDelivery         int64   `protobuf:"varint,5,opt,name=min_delivery,json=minDelivery,proto3" json:"min_delivery,omitempty"`
	MaxDelivery         int64   `protobuf:"varint,6,opt,name=max_delivery,json=maxDelivery,proto3" json:"max_delivery,omitempty"`
	Rating              float32 `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Favourite           bool    `protobuf:"varint,8,opt,name=favourite,proto3" json:"favourite,omitempty"`
	Tags                []*Tags `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Menu                []*Menu `protobuf:"bytes,10,rep,name=menu,proto3" json:"menu,omitempty"`
	Error               string  `protobuf:"bytes,11,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RestaurantInfo) Reset() {
	*x = RestaurantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestaurantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantInfo) ProtoMessage() {}

func (x *RestaurantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantInfo.ProtoReflect.Descriptor instead.
func (*RestaurantInfo) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{7}
}

func (x *RestaurantInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RestaurantInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *RestaurantInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestaurantInfo) GetCostForFreeDelivery() int64 {
	if x != nil {
		return x.CostForFreeDelivery
	}
	return 0
}

func (x *RestaurantInfo) GetMinDelivery() int64 {
	if x != nil {
		return x.MinDelivery
	}
	return 0
}

func (x *RestaurantInfo) GetMaxDelivery() int64 {
	if x != nil {
		return x.MaxDelivery
	}
	return 0
}

func (x *RestaurantInfo) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RestaurantInfo) GetFavourite() bool {
	if x != nil {
		return x.Favourite
	}
	return false
}

func (x *RestaurantInfo) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RestaurantInfo) GetMenu() []*Menu {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *RestaurantInfo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dishes []*DishesMenu `protobuf:"bytes,2,rep,name=dishes,proto3" json:"dishes,omitempty"`
}

func (x *Menu) Reset() {
	*x = Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{8}
}

func (x *Menu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Menu) GetDishes() []*DishesMenu {
	if x != nil {
		return x.Dishes
	}
	return nil
}

type DishesMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cost int64  `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Ccal int64  `protobuf:"varint,4,opt,name=ccal,proto3" json:"ccal,omitempty"`
	Img  string `protobuf:"bytes,5,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *DishesMenu) Reset() {
	*x = DishesMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishesMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishesMenu) ProtoMessage() {}

func (x *DishesMenu) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishesMenu.ProtoReflect.Descriptor instead.
func (*DishesMenu) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{9}
}

func (x *DishesMenu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DishesMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishesMenu) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *DishesMenu) GetCcal() int64 {
	if x != nil {
		return x.Ccal
	}
	return 0
}

func (x *DishesMenu) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Tags) Reset() {
	*x = Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tags) ProtoMessage() {}

func (x *Tags) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tags.ProtoReflect.Descriptor instead.
func (*Tags) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{10}
}

func (x *Tags) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tags) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DishInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId int64 `protobuf:"varint,1,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	DishId       int64 `protobuf:"varint,2,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
}

func (x *DishInfo) Reset() {
	*x = DishInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishInfo) ProtoMessage() {}

func (x *DishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishInfo.ProtoReflect.Descriptor instead.
func (*DishInfo) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{11}
}

func (x *DishInfo) GetRestaurantId() int64 {
	if x != nil {
		return x.RestaurantId
	}
	return 0
}

func (x *DishInfo) GetDishId() int64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{12}
}

type Dishes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Img         string         `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Name        string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cost        int64          `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Ccal        int64          `protobuf:"varint,5,opt,name=ccal,proto3" json:"ccal,omitempty"`
	Description string         `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Radios      []*Radios      `protobuf:"bytes,7,rep,name=radios,proto3" json:"radios,omitempty"`
	Ingredients []*Ingredients `protobuf:"bytes,8,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Error       string         `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Dishes) Reset() {
	*x = Dishes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dishes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dishes) ProtoMessage() {}

func (x *Dishes) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dishes.ProtoReflect.Descriptor instead.
func (*Dishes) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{13}
}

func (x *Dishes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dishes) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Dishes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dishes) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Dishes) GetCcal() int64 {
	if x != nil {
		return x.Ccal
	}
	return 0
}

func (x *Dishes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Dishes) GetRadios() []*Radios {
	if x != nil {
		return x.Radios
	}
	return nil
}

func (x *Dishes) GetIngredients() []*Ingredients {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Dishes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Radios struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   int64             `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Rows []*CheckboxesRows `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *Radios) Reset() {
	*x = Radios{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Radios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Radios) ProtoMessage() {}

func (x *Radios) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Radios.ProtoReflect.Descriptor instead.
func (*Radios) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{14}
}

func (x *Radios) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Radios) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Radios) GetRows() []*CheckboxesRows {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CheckboxesRows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CheckboxesRows) Reset() {
	*x = CheckboxesRows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckboxesRows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckboxesRows) ProtoMessage() {}

func (x *CheckboxesRows) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckboxesRows.ProtoReflect.Descriptor instead.
func (*CheckboxesRows) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{15}
}

func (x *CheckboxesRows) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckboxesRows) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ingredients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cost int64  `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *Ingredients) Reset() {
	*x = Ingredients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ingredients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredients) ProtoMessage() {}

func (x *Ingredients) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredients.ProtoReflect.Descriptor instead.
func (*Ingredients) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{16}
}

func (x *Ingredients) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ingredients) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ingredients) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type DishesHostArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dishes *DishesHost `protobuf:"bytes,1,opt,name=dishes,proto3" json:"dishes,omitempty"`
}

func (x *DishesHostArray) Reset() {
	*x = DishesHostArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishesHostArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishesHostArray) ProtoMessage() {}

func (x *DishesHostArray) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishesHostArray.ProtoReflect.Descriptor instead.
func (*DishesHostArray) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{17}
}

func (x *DishesHostArray) GetDishes() *DishesHost {
	if x != nil {
		return x.Dishes
	}
	return nil
}

type DishesHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cost               int64                `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Ccal               int64                `protobuf:"varint,4,opt,name=ccal,proto3" json:"ccal,omitempty"`
	Description        string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Protein            int64                `protobuf:"varint,6,opt,name=protein,proto3" json:"protein,omitempty"`
	Falt               int64                `protobuf:"varint,7,opt,name=falt,proto3" json:"falt,omitempty"`
	Carbohydrates      int64                `protobuf:"varint,8,opt,name=carbohydrates,proto3" json:"carbohydrates,omitempty"`
	Weight             int64                `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	CategoryDishes     string               `protobuf:"bytes,10,opt,name=category_dishes,json=categoryDishes,proto3" json:"category_dishes,omitempty"`
	CategoryRestaurant string               `protobuf:"bytes,11,opt,name=category_restaurant,json=categoryRestaurant,proto3" json:"category_restaurant,omitempty"`
	Count              int64                `protobuf:"varint,12,opt,name=count,proto3" json:"count,omitempty"`
	Radios             []*CreateRadios      `protobuf:"bytes,13,rep,name=radios,proto3" json:"radios,omitempty"`
	Ingredients        []*CreateIngredients `protobuf:"bytes,14,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Error              string               `protobuf:"bytes,15,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DishesHost) Reset() {
	*x = DishesHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishesHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishesHost) ProtoMessage() {}

func (x *DishesHost) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishesHost.ProtoReflect.Descriptor instead.
func (*DishesHost) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{18}
}

func (x *DishesHost) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DishesHost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishesHost) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *DishesHost) GetCcal() int64 {
	if x != nil {
		return x.Ccal
	}
	return 0
}

func (x *DishesHost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DishesHost) GetProtein() int64 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *DishesHost) GetFalt() int64 {
	if x != nil {
		return x.Falt
	}
	return 0
}

func (x *DishesHost) GetCarbohydrates() int64 {
	if x != nil {
		return x.Carbohydrates
	}
	return 0
}

func (x *DishesHost) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *DishesHost) GetCategoryDishes() string {
	if x != nil {
		return x.CategoryDishes
	}
	return ""
}

func (x *DishesHost) GetCategoryRestaurant() string {
	if x != nil {
		return x.CategoryRestaurant
	}
	return ""
}

func (x *DishesHost) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DishesHost) GetRadios() []*CreateRadios {
	if x != nil {
		return x.Radios
	}
	return nil
}

func (x *DishesHost) GetIngredients() []*CreateIngredients {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *DishesHost) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateRadiosArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Radios *CreateRadios `protobuf:"bytes,1,opt,name=radios,proto3" json:"radios,omitempty"`
	DishId int64         `protobuf:"varint,2,opt,name=dishId,proto3" json:"dishId,omitempty"`
}

func (x *CreateRadiosArray) Reset() {
	*x = CreateRadiosArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRadiosArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRadiosArray) ProtoMessage() {}

func (x *CreateRadiosArray) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRadiosArray.ProtoReflect.Descriptor instead.
func (*CreateRadiosArray) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{19}
}

func (x *CreateRadiosArray) GetRadios() *CreateRadios {
	if x != nil {
		return x.Radios
	}
	return nil
}

func (x *CreateRadiosArray) GetDishId() int64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

type CreateRadios struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id    int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Rows  []*CreateElementRadios `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
	Error string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateRadios) Reset() {
	*x = CreateRadios{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRadios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRadios) ProtoMessage() {}

func (x *CreateRadios) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRadios.ProtoReflect.Descriptor instead.
func (*CreateRadios) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{20}
}

func (x *CreateRadios) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRadios) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateRadios) GetRows() []*CreateElementRadios {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *CreateRadios) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateElementRadios struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Protein       int64  `protobuf:"varint,3,opt,name=protein,proto3" json:"protein,omitempty"`
	Falt          int64  `protobuf:"varint,4,opt,name=falt,proto3" json:"falt,omitempty"`
	Carbohydrates int64  `protobuf:"varint,5,opt,name=carbohydrates,proto3" json:"carbohydrates,omitempty"`
	Error         string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateElementRadios) Reset() {
	*x = CreateElementRadios{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateElementRadios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateElementRadios) ProtoMessage() {}

func (x *CreateElementRadios) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateElementRadios.ProtoReflect.Descriptor instead.
func (*CreateElementRadios) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{21}
}

func (x *CreateElementRadios) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateElementRadios) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateElementRadios) GetProtein() int64 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *CreateElementRadios) GetFalt() int64 {
	if x != nil {
		return x.Falt
	}
	return 0
}

func (x *CreateElementRadios) GetCarbohydrates() int64 {
	if x != nil {
		return x.Carbohydrates
	}
	return 0
}

func (x *CreateElementRadios) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateIngredientsArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingredients *CreateIngredients `protobuf:"bytes,1,opt,name=ingredients,proto3" json:"ingredients,omitempty"`
	DishId      int64              `protobuf:"varint,2,opt,name=dishId,proto3" json:"dishId,omitempty"`
}

func (x *CreateIngredientsArray) Reset() {
	*x = CreateIngredientsArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredientsArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientsArray) ProtoMessage() {}

func (x *CreateIngredientsArray) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientsArray.ProtoReflect.Descriptor instead.
func (*CreateIngredientsArray) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{22}
}

func (x *CreateIngredientsArray) GetIngredients() *CreateIngredients {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *CreateIngredientsArray) GetDishId() int64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

type CreateIngredients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cost          int64  `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Protein       int64  `protobuf:"varint,4,opt,name=protein,proto3" json:"protein,omitempty"`
	Falt          int64  `protobuf:"varint,5,opt,name=falt,proto3" json:"falt,omitempty"`
	Carbohydrates int64  `protobuf:"varint,6,opt,name=carbohydrates,proto3" json:"carbohydrates,omitempty"`
	Count         int64  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	Error         string `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateIngredients) Reset() {
	*x = CreateIngredients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredients) ProtoMessage() {}

func (x *CreateIngredients) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredients.ProtoReflect.Descriptor instead.
func (*CreateIngredients) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{23}
}

func (x *CreateIngredients) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateIngredients) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIngredients) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *CreateIngredients) GetProtein() int64 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *CreateIngredients) GetFalt() int64 {
	if x != nil {
		return x.Falt
	}
	return 0
}

func (x *CreateIngredients) GetCarbohydrates() int64 {
	if x != nil {
		return x.Carbohydrates
	}
	return 0
}

func (x *CreateIngredients) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreateIngredients) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NewReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurant *RestaurantInfo `protobuf:"bytes,1,opt,name=restaurant,proto3" json:"restaurant,omitempty"`
	Text       string          `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Rate       int64           `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Id         int64           `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewReview) Reset() {
	*x = NewReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReview) ProtoMessage() {}

func (x *NewReview) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReview.ProtoReflect.Descriptor instead.
func (*NewReview) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{24}
}

func (x *NewReview) GetRestaurant() *RestaurantInfo {
	if x != nil {
		return x.Restaurant
	}
	return nil
}

func (x *NewReview) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *NewReview) GetRate() int64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *NewReview) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{25}
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SearchRestaurantText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SearchRestaurantText) Reset() {
	*x = SearchRestaurantText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRestaurantText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRestaurantText) ProtoMessage() {}

func (x *SearchRestaurantText) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRestaurantText.ProtoReflect.Descriptor instead.
func (*SearchRestaurantText) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{26}
}

func (x *SearchRestaurantText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ResReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Img                 string    `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Name                string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CostForFreeDelivery int64     `protobuf:"varint,4,opt,name=cost_for_free_delivery,json=costForFreeDelivery,proto3" json:"cost_for_free_delivery,omitempty"`
	MinDelivery         int64     `protobuf:"varint,5,opt,name=min_delivery,json=minDelivery,proto3" json:"min_delivery,omitempty"`
	MaxDelivery         int64     `protobuf:"varint,6,opt,name=max_delivery,json=maxDelivery,proto3" json:"max_delivery,omitempty"`
	Rating              float32   `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Status              bool      `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Review              []*Review `protobuf:"bytes,9,rep,name=review,proto3" json:"review,omitempty"`
	Tags                []*Tags   `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Error               string    `protobuf:"bytes,11,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResReview) Reset() {
	*x = ResReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResReview) ProtoMessage() {}

func (x *ResReview) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResReview.ProtoReflect.Descriptor instead.
func (*ResReview) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{27}
}

func (x *ResReview) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResReview) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ResReview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResReview) GetCostForFreeDelivery() int64 {
	if x != nil {
		return x.CostForFreeDelivery
	}
	return 0
}

func (x *ResReview) GetMinDelivery() int64 {
	if x != nil {
		return x.MinDelivery
	}
	return 0
}

func (x *ResReview) GetMaxDelivery() int64 {
	if x != nil {
		return x.MaxDelivery
	}
	return 0
}

func (x *ResReview) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ResReview) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ResReview) GetReview() []*Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *ResReview) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ResReview) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Date string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Time string `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Rate int64  `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *Review) Reset() {
	*x = Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{28}
}

func (x *Review) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Review) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Review) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Review) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Review) GetRate() int64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{29}
}

func (x *UserId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EditRestaurantInFavoriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdRestaurant int64 `protobuf:"varint,1,opt,name=id_restaurant,json=idRestaurant,proto3" json:"id_restaurant,omitempty"`
	IdClient     int64 `protobuf:"varint,2,opt,name=id_client,json=idClient,proto3" json:"id_client,omitempty"`
}

func (x *EditRestaurantInFavoriteRequest) Reset() {
	*x = EditRestaurantInFavoriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditRestaurantInFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRestaurantInFavoriteRequest) ProtoMessage() {}

func (x *EditRestaurantInFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRestaurantInFavoriteRequest.ProtoReflect.Descriptor instead.
func (*EditRestaurantInFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{30}
}

func (x *EditRestaurantInFavoriteRequest) GetIdRestaurant() int64 {
	if x != nil {
		return x.IdRestaurant
	}
	return 0
}

func (x *EditRestaurantInFavoriteRequest) GetIdClient() int64 {
	if x != nil {
		return x.IdClient
	}
	return 0
}

type ResponseEditRestaurantInFavorite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResponseEditRestaurantInFavorite) Reset() {
	*x = ResponseEditRestaurantInFavorite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEditRestaurantInFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEditRestaurantInFavorite) ProtoMessage() {}

func (x *ResponseEditRestaurantInFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEditRestaurantInFavorite.ProtoReflect.Descriptor instead.
func (*ResponseEditRestaurantInFavorite) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{31}
}

func (x *ResponseEditRestaurantInFavorite) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ResponseEditRestaurantInFavorite) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DishId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DishId) Reset() {
	*x = DishId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restaurant_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishId) ProtoMessage() {}

func (x *DishId) ProtoReflect() protoreflect.Message {
	mi := &file_restaurant_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishId.ProtoReflect.Descriptor instead.
func (*DishId) Descriptor() ([]byte, []int) {
	return file_restaurant_proto_rawDescGZIP(), []int{32}
}

func (x *DishId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_restaurant_proto protoreflect.FileDescriptor

var file_restaurant_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x5d,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8e, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc1,
	0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x54, 0x61,
	0x67, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x72, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x73,
	0x74, 0x46, 0x6f, 0x72, 0x46, 0x72, 0x65, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x3a,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0xd9, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x73,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x73, 0x74, 0x46,
	0x6f, 0x72, 0x46, 0x72, 0x65, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x04,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x63,
	0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x6d, 0x67, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x48, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x49, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x85, 0x02, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x63, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x63, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x61, 0x64, 0x69,
	0x6f, 0x73, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x06, 0x52,
	0x61, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52,
	0x6f, 0x77, 0x73, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x45, 0x0a, 0x0b, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x69, 0x73,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x22, 0xdf, 0x03, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x68, 0x65, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x63, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x66, 0x61, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x72,
	0x62, 0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x64,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x52, 0x06, 0x72, 0x61,
	0x64, 0x69, 0x6f, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x30, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x64, 0x69, 0x6f,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66,
	0x61, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x62,
	0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x71, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x3f, 0x0a, 0x0b, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x73, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68,
	0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x61, 0x6c, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x7f, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x3a, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x2a, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xd4, 0x02, 0x0a,
	0x09, 0x52, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x63, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x46, 0x72, 0x65, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x22, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x1f, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0x50, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x18, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x32, 0xb8, 0x08, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73,
	0x54, 0x61, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x18,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x4d, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x45, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x17, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x75, 0x0a, 0x18, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x2b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x33, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x12, 0x12, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x1a,
	0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x68, 0x12, 0x12, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49,
	0x64, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x52, 0x61, 0x64, 0x69, 0x6f,
	0x73, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44,
	0x69, 0x73, 0x68, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x1a, 0x11, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x12, 0x12,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68,
	0x49, 0x64, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x1a, 0x11, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x35, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x73,
	0x12, 0x12, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x69,
	0x73, 0x68, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_restaurant_proto_rawDescOnce sync.Once
	file_restaurant_proto_rawDescData = file_restaurant_proto_rawDesc
)

func file_restaurant_proto_rawDescGZIP() []byte {
	file_restaurant_proto_rawDescOnce.Do(func() {
		file_restaurant_proto_rawDescData = protoimpl.X.CompressGZIP(file_restaurant_proto_rawDescData)
	})
	return file_restaurant_proto_rawDescData
}

var file_restaurant_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_restaurant_proto_goTypes = []interface{}{
	(*Restaurants)(nil),                      // 0: restaurant.Restaurants
	(*RecommendedRestaurants)(nil),           // 1: restaurant.RecommendedRestaurants
	(*RestaurantsTagsPromo)(nil),             // 2: restaurant.RestaurantsTagsPromo
	(*Promocode)(nil),                        // 3: restaurant.Promocode
	(*Restaurant)(nil),                       // 4: restaurant.Restaurant
	(*RestaurantId)(nil),                     // 5: restaurant.RestaurantId
	(*RestaurantClientId)(nil),               // 6: restaurant.RestaurantClientId
	(*RestaurantInfo)(nil),                   // 7: restaurant.RestaurantInfo
	(*Menu)(nil),                             // 8: restaurant.Menu
	(*DishesMenu)(nil),                       // 9: restaurant.DishesMenu
	(*Tags)(nil),                             // 10: restaurant.Tags
	(*DishInfo)(nil),                         // 11: restaurant.DishInfo
	(*Empty)(nil),                            // 12: restaurant.Empty
	(*Dishes)(nil),                           // 13: restaurant.Dishes
	(*Radios)(nil),                           // 14: restaurant.Radios
	(*CheckboxesRows)(nil),                   // 15: restaurant.CheckboxesRows
	(*Ingredients)(nil),                      // 16: restaurant.Ingredients
	(*DishesHostArray)(nil),                  // 17: restaurant.DishesHostArray
	(*DishesHost)(nil),                       // 18: restaurant.DishesHost
	(*CreateRadiosArray)(nil),                // 19: restaurant.CreateRadiosArray
	(*CreateRadios)(nil),                     // 20: restaurant.CreateRadios
	(*CreateElementRadios)(nil),              // 21: restaurant.CreateElementRadios
	(*CreateIngredientsArray)(nil),           // 22: restaurant.CreateIngredientsArray
	(*CreateIngredients)(nil),                // 23: restaurant.CreateIngredients
	(*NewReview)(nil),                        // 24: restaurant.NewReview
	(*Error)(nil),                            // 25: restaurant.Error
	(*SearchRestaurantText)(nil),             // 26: restaurant.SearchRestaurantText
	(*ResReview)(nil),                        // 27: restaurant.ResReview
	(*Review)(nil),                           // 28: restaurant.Review
	(*UserId)(nil),                           // 29: restaurant.UserId
	(*EditRestaurantInFavoriteRequest)(nil),  // 30: restaurant.EditRestaurantInFavoriteRequest
	(*ResponseEditRestaurantInFavorite)(nil), // 31: restaurant.ResponseEditRestaurantInFavorite
	(*DishId)(nil),                           // 32: restaurant.DishId
}
var file_restaurant_proto_depIdxs = []int32{
	4,  // 0: restaurant.Restaurants.restaurants:type_name -> restaurant.Restaurant
	4,  // 1: restaurant.RecommendedRestaurants.restaurants:type_name -> restaurant.Restaurant
	10, // 2: restaurant.RecommendedRestaurants.tags:type_name -> restaurant.Tags
	4,  // 3: restaurant.RestaurantsTagsPromo.restaurants:type_name -> restaurant.Restaurant
	10, // 4: restaurant.RestaurantsTagsPromo.tags:type_name -> restaurant.Tags
	3,  // 5: restaurant.RestaurantsTagsPromo.promocode:type_name -> restaurant.Promocode
	10, // 6: restaurant.RestaurantInfo.tags:type_name -> restaurant.Tags
	8,  // 7: restaurant.RestaurantInfo.menu:type_name -> restaurant.Menu
	9,  // 8: restaurant.Menu.dishes:type_name -> restaurant.DishesMenu
	14, // 9: restaurant.Dishes.radios:type_name -> restaurant.Radios
	16, // 10: restaurant.Dishes.ingredients:type_name -> restaurant.Ingredients
	15, // 11: restaurant.Radios.rows:type_name -> restaurant.CheckboxesRows
	18, // 12: restaurant.DishesHostArray.dishes:type_name -> restaurant.DishesHost
	20, // 13: restaurant.DishesHost.radios:type_name -> restaurant.CreateRadios
	23, // 14: restaurant.DishesHost.ingredients:type_name -> restaurant.CreateIngredients
	20, // 15: restaurant.CreateRadiosArray.radios:type_name -> restaurant.CreateRadios
	21, // 16: restaurant.CreateRadios.rows:type_name -> restaurant.CreateElementRadios
	23, // 17: restaurant.CreateIngredientsArray.ingredients:type_name -> restaurant.CreateIngredients
	7,  // 18: restaurant.NewReview.restaurant:type_name -> restaurant.RestaurantInfo
	28, // 19: restaurant.ResReview.review:type_name -> restaurant.Review
	10, // 20: restaurant.ResReview.tags:type_name -> restaurant.Tags
	12, // 21: restaurant.RestaurantService.AllRestaurants:input_type -> restaurant.Empty
	12, // 22: restaurant.RestaurantService.GetRecommendedRestaurants:input_type -> restaurant.Empty
	5,  // 23: restaurant.RestaurantService.GetRestaurant:input_type -> restaurant.RestaurantId
	11, // 24: restaurant.RestaurantService.RestaurantDishes:input_type -> restaurant.DishInfo
	24, // 25: restaurant.RestaurantService.CreateReview:input_type -> restaurant.NewReview
	6,  // 26: restaurant.RestaurantService.GetReview:input_type -> restaurant.RestaurantClientId
	26, // 27: restaurant.RestaurantService.SearchRestaurant:input_type -> restaurant.SearchRestaurantText
	29, // 28: restaurant.RestaurantService.GetFavoriteRestaurants:input_type -> restaurant.UserId
	30, // 29: restaurant.RestaurantService.EditRestaurantInFavorite:input_type -> restaurant.EditRestaurantInFavoriteRequest
	32, // 30: restaurant.RestaurantService.deleteDish:input_type -> restaurant.DishId
	32, // 31: restaurant.RestaurantService.AddDish:input_type -> restaurant.DishId
	32, // 32: restaurant.RestaurantService.AddRadios:input_type -> restaurant.DishId
	32, // 33: restaurant.RestaurantService.AddIngredient:input_type -> restaurant.DishId
	32, // 34: restaurant.RestaurantService.UpdateDish:input_type -> restaurant.DishId
	32, // 35: restaurant.RestaurantService.UpdateIngredient:input_type -> restaurant.DishId
	32, // 36: restaurant.RestaurantService.UpdateRadios:input_type -> restaurant.DishId
	2,  // 37: restaurant.RestaurantService.AllRestaurants:output_type -> restaurant.RestaurantsTagsPromo
	1,  // 38: restaurant.RestaurantService.GetRecommendedRestaurants:output_type -> restaurant.RecommendedRestaurants
	7,  // 39: restaurant.RestaurantService.GetRestaurant:output_type -> restaurant.RestaurantInfo
	13, // 40: restaurant.RestaurantService.RestaurantDishes:output_type -> restaurant.Dishes
	25, // 41: restaurant.RestaurantService.CreateReview:output_type -> restaurant.Error
	27, // 42: restaurant.RestaurantService.GetReview:output_type -> restaurant.ResReview
	0,  // 43: restaurant.RestaurantService.SearchRestaurant:output_type -> restaurant.Restaurants
	0,  // 44: restaurant.RestaurantService.GetFavoriteRestaurants:output_type -> restaurant.Restaurants
	31, // 45: restaurant.RestaurantService.EditRestaurantInFavorite:output_type -> restaurant.ResponseEditRestaurantInFavorite
	25, // 46: restaurant.RestaurantService.deleteDish:output_type -> restaurant.Error
	25, // 47: restaurant.RestaurantService.AddDish:output_type -> restaurant.Error
	25, // 48: restaurant.RestaurantService.AddRadios:output_type -> restaurant.Error
	25, // 49: restaurant.RestaurantService.AddIngredient:output_type -> restaurant.Error
	25, // 50: restaurant.RestaurantService.UpdateDish:output_type -> restaurant.Error
	25, // 51: restaurant.RestaurantService.UpdateIngredient:output_type -> restaurant.Error
	25, // 52: restaurant.RestaurantService.UpdateRadios:output_type -> restaurant.Error
	37, // [37:53] is the sub-list for method output_type
	21, // [21:37] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_restaurant_proto_init() }
func file_restaurant_proto_init() {
	if File_restaurant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_restaurant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restaurants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendedRestaurants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantsTagsPromo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Promocode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restaurant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantClientId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestaurantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishesMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dishes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Radios); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckboxesRows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ingredients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishesHostArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishesHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRadiosArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRadios); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateElementRadios); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngredientsArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngredients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRestaurantText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditRestaurantInFavoriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEditRestaurantInFavorite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restaurant_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_restaurant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_restaurant_proto_goTypes,
		DependencyIndexes: file_restaurant_proto_depIdxs,
		MessageInfos:      file_restaurant_proto_msgTypes,
	}.Build()
	File_restaurant_proto = out.File
	file_restaurant_proto_rawDesc = nil
	file_restaurant_proto_goTypes = nil
	file_restaurant_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RestaurantServiceClient is the client API for RestaurantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RestaurantServiceClient interface {
	AllRestaurants(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RestaurantsTagsPromo, error)
	GetRecommendedRestaurants(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RecommendedRestaurants, error)
	GetRestaurant(ctx context.Context, in *RestaurantId, opts ...grpc.CallOption) (*RestaurantInfo, error)
	RestaurantDishes(ctx context.Context, in *DishInfo, opts ...grpc.CallOption) (*Dishes, error)
	CreateReview(ctx context.Context, in *NewReview, opts ...grpc.CallOption) (*Error, error)
	GetReview(ctx context.Context, in *RestaurantClientId, opts ...grpc.CallOption) (*ResReview, error)
	SearchRestaurant(ctx context.Context, in *SearchRestaurantText, opts ...grpc.CallOption) (*Restaurants, error)
	GetFavoriteRestaurants(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Restaurants, error)
	EditRestaurantInFavorite(ctx context.Context, in *EditRestaurantInFavoriteRequest, opts ...grpc.CallOption) (*ResponseEditRestaurantInFavorite, error)
	DeleteDish(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
	AddDish(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
	AddRadios(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
	AddIngredient(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
	UpdateDish(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
	UpdateIngredient(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
	UpdateRadios(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error)
}

func (r RestaurantServiceClient) AddDish(ctx context.Context, dish *DishesHost, opts ...grpc.CallOption) (*Error, error) {
	//TODO implement me
	panic("implement me")
}

func (r RestaurantServiceClient) AddRadios(ctx context.Context, radios *CreateRadiosArray, opts ...grpc.CallOption) (*Error, error) {
	//TODO implement me
	panic("implement me")
}

func (r RestaurantServiceClient) AddIngredient(ctx context.Context, ingredient *CreateIngredientsArray, opts ...grpc.CallOption) (*Error, error) {
	//TODO implement me
	panic("implement me")
}

func (r RestaurantServiceClient) UpdateDish(ctx context.Context, dish *DishesHost, opts ...grpc.CallOption) (*Error, error) {
	//TODO implement me
	panic("implement me")
}

func (r RestaurantServiceClient) UpdateIngredient(ctx context.Context, dish *CreateIngredientsArray, opts ...grpc.CallOption) (*Error, error) {
	//TODO implement me
	panic("implement me")
}

func (r RestaurantServiceClient) UpdateRadios(ctx context.Context, dish *CreateRadiosArray, opts ...grpc.CallOption) (*Error, error) {
	//TODO implement me
	panic("implement me")
}

type restaurantServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRestaurantServiceClient(cc grpc.ClientConnInterface) RestaurantServiceClient {
	return &restaurantServiceClient{cc}
}

func (c *restaurantServiceClient) AllRestaurants(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RestaurantsTagsPromo, error) {
	out := new(RestaurantsTagsPromo)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/AllRestaurants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetRecommendedRestaurants(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RecommendedRestaurants, error) {
	out := new(RecommendedRestaurants)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/GetRecommendedRestaurants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetRestaurant(ctx context.Context, in *RestaurantId, opts ...grpc.CallOption) (*RestaurantInfo, error) {
	out := new(RestaurantInfo)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/GetRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) RestaurantDishes(ctx context.Context, in *DishInfo, opts ...grpc.CallOption) (*Dishes, error) {
	out := new(Dishes)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/RestaurantDishes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) CreateReview(ctx context.Context, in *NewReview, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/CreateReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetReview(ctx context.Context, in *RestaurantClientId, opts ...grpc.CallOption) (*ResReview, error) {
	out := new(ResReview)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/GetReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) SearchRestaurant(ctx context.Context, in *SearchRestaurantText, opts ...grpc.CallOption) (*Restaurants, error) {
	out := new(Restaurants)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/SearchRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetFavoriteRestaurants(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Restaurants, error) {
	out := new(Restaurants)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/GetFavoriteRestaurants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) EditRestaurantInFavorite(ctx context.Context, in *EditRestaurantInFavoriteRequest, opts ...grpc.CallOption) (*ResponseEditRestaurantInFavorite, error) {
	out := new(ResponseEditRestaurantInFavorite)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/EditRestaurantInFavorite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) DeleteDish(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/deleteDish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) AddDish(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/AddDish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) AddRadios(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/AddRadios", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) AddIngredient(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/AddIngredient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) UpdateDish(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/UpdateDish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) UpdateIngredient(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/UpdateIngredient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) UpdateRadios(ctx context.Context, in *DishId, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/restaurant.RestaurantService/UpdateRadios", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RestaurantServiceServer is the server API for RestaurantService service.
type RestaurantServiceServer interface {
	AllRestaurants(context.Context, *Empty) (*RestaurantsTagsPromo, error)
	GetRecommendedRestaurants(context.Context, *Empty) (*RecommendedRestaurants, error)
	GetRestaurant(context.Context, *RestaurantId) (*RestaurantInfo, error)
	RestaurantDishes(context.Context, *DishInfo) (*Dishes, error)
	CreateReview(context.Context, *NewReview) (*Error, error)
	GetReview(context.Context, *RestaurantClientId) (*ResReview, error)
	SearchRestaurant(context.Context, *SearchRestaurantText) (*Restaurants, error)
	GetFavoriteRestaurants(context.Context, *UserId) (*Restaurants, error)
	EditRestaurantInFavorite(context.Context, *EditRestaurantInFavoriteRequest) (*ResponseEditRestaurantInFavorite, error)
	DeleteDish(context.Context, *DishId) (*Error, error)
	AddDish(context.Context, *DishId) (*Error, error)
	AddRadios(context.Context, *DishId) (*Error, error)
	AddIngredient(context.Context, *DishId) (*Error, error)
	UpdateDish(context.Context, *DishId) (*Error, error)
	UpdateIngredient(context.Context, *DishId) (*Error, error)
	UpdateRadios(context.Context, *DishId) (*Error, error)
}

// UnimplementedRestaurantServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRestaurantServiceServer struct {
}

func (*UnimplementedRestaurantServiceServer) AllRestaurants(context.Context, *Empty) (*RestaurantsTagsPromo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllRestaurants not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRecommendedRestaurants(context.Context, *Empty) (*RecommendedRestaurants, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecommendedRestaurants not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRestaurant(context.Context, *RestaurantId) (*RestaurantInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRestaurant not implemented")
}
func (*UnimplementedRestaurantServiceServer) RestaurantDishes(context.Context, *DishInfo) (*Dishes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestaurantDishes not implemented")
}
func (*UnimplementedRestaurantServiceServer) CreateReview(context.Context, *NewReview) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReview not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetReview(context.Context, *RestaurantClientId) (*ResReview, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReview not implemented")
}
func (*UnimplementedRestaurantServiceServer) SearchRestaurant(context.Context, *SearchRestaurantText) (*Restaurants, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchRestaurant not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetFavoriteRestaurants(context.Context, *UserId) (*Restaurants, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFavoriteRestaurants not implemented")
}
func (*UnimplementedRestaurantServiceServer) EditRestaurantInFavorite(context.Context, *EditRestaurantInFavoriteRequest) (*ResponseEditRestaurantInFavorite, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditRestaurantInFavorite not implemented")
}
func (*UnimplementedRestaurantServiceServer) DeleteDish(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDish not implemented")
}
func (*UnimplementedRestaurantServiceServer) AddDish(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDish not implemented")
}
func (*UnimplementedRestaurantServiceServer) AddRadios(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRadios not implemented")
}
func (*UnimplementedRestaurantServiceServer) AddIngredient(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIngredient not implemented")
}
func (*UnimplementedRestaurantServiceServer) UpdateDish(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDish not implemented")
}
func (*UnimplementedRestaurantServiceServer) UpdateIngredient(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIngredient not implemented")
}
func (*UnimplementedRestaurantServiceServer) UpdateRadios(context.Context, *DishId) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRadios not implemented")
}

func RegisterRestaurantServiceServer(s *grpc.Server, srv RestaurantServiceServer) {
	s.RegisterService(&_RestaurantService_serviceDesc, srv)
}

func _RestaurantService_AllRestaurants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AllRestaurants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/AllRestaurants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AllRestaurants(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetRecommendedRestaurants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetRecommendedRestaurants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/GetRecommendedRestaurants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetRecommendedRestaurants(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestaurantId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/GetRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetRestaurant(ctx, req.(*RestaurantId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_RestaurantDishes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).RestaurantDishes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/RestaurantDishes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).RestaurantDishes(ctx, req.(*DishInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_CreateReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewReview)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).CreateReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/CreateReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).CreateReview(ctx, req.(*NewReview))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestaurantClientId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/GetReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetReview(ctx, req.(*RestaurantClientId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_SearchRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRestaurantText)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).SearchRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/SearchRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).SearchRestaurant(ctx, req.(*SearchRestaurantText))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetFavoriteRestaurants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetFavoriteRestaurants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/GetFavoriteRestaurants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetFavoriteRestaurants(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_EditRestaurantInFavorite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRestaurantInFavoriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).EditRestaurantInFavorite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/EditRestaurantInFavorite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).EditRestaurantInFavorite(ctx, req.(*EditRestaurantInFavoriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_DeleteDish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).DeleteDish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/DeleteDish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).DeleteDish(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_AddDish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AddDish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/AddDish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AddDish(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_AddRadios_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AddRadios(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/AddRadios",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AddRadios(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_AddIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AddIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/AddIngredient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AddIngredient(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_UpdateDish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).UpdateDish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/UpdateDish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).UpdateDish(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_UpdateIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).UpdateIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/UpdateIngredient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).UpdateIngredient(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_UpdateRadios_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DishId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).UpdateRadios(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restaurant.RestaurantService/UpdateRadios",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).UpdateRadios(ctx, req.(*DishId))
	}
	return interceptor(ctx, in, info, handler)
}

var _RestaurantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "restaurant.RestaurantService",
	HandlerType: (*RestaurantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AllRestaurants",
			Handler:    _RestaurantService_AllRestaurants_Handler,
		},
		{
			MethodName: "GetRecommendedRestaurants",
			Handler:    _RestaurantService_GetRecommendedRestaurants_Handler,
		},
		{
			MethodName: "GetRestaurant",
			Handler:    _RestaurantService_GetRestaurant_Handler,
		},
		{
			MethodName: "RestaurantDishes",
			Handler:    _RestaurantService_RestaurantDishes_Handler,
		},
		{
			MethodName: "CreateReview",
			Handler:    _RestaurantService_CreateReview_Handler,
		},
		{
			MethodName: "GetReview",
			Handler:    _RestaurantService_GetReview_Handler,
		},
		{
			MethodName: "SearchRestaurant",
			Handler:    _RestaurantService_SearchRestaurant_Handler,
		},
		{
			MethodName: "GetFavoriteRestaurants",
			Handler:    _RestaurantService_GetFavoriteRestaurants_Handler,
		},
		{
			MethodName: "EditRestaurantInFavorite",
			Handler:    _RestaurantService_EditRestaurantInFavorite_Handler,
		},
		{
			MethodName: "deleteDish",
			Handler:    _RestaurantService_DeleteDish_Handler,
		},
		{
			MethodName: "AddDish",
			Handler:    _RestaurantService_AddDish_Handler,
		},
		{
			MethodName: "AddRadios",
			Handler:    _RestaurantService_AddRadios_Handler,
		},
		{
			MethodName: "AddIngredient",
			Handler:    _RestaurantService_AddIngredient_Handler,
		},
		{
			MethodName: "UpdateDish",
			Handler:    _RestaurantService_UpdateDish_Handler,
		},
		{
			MethodName: "UpdateIngredient",
			Handler:    _RestaurantService_UpdateIngredient_Handler,
		},
		{
			MethodName: "UpdateRadios",
			Handler:    _RestaurantService_UpdateRadios_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "restaurant.proto",
}
